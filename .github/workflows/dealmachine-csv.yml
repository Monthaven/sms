name: DealMachine CSV â†’ Notion + EZTexting (w/ optional Sheet)

on:
  workflow_dispatch:
    inputs:
      csv_path:
        description: "Path to DealMachine CSV in repo (e.g., campaigns/inputs/myfile.csv)"
        required: true
      dry_run:
        description: "Don't send texts; just stage + preview"
        type: boolean
        default: true
  push:
    paths:
      - "campaigns/inputs/*.csv"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install deps
        run: npm ci

      - name: Resolve CSV inputs
        id: resolve
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "CSV_PATH=${{ github.event.inputs.csv_path }}" >> "$GITHUB_ENV"
            echo "DRY_RUN=${{ github.event.inputs.dry_run }}" >> "$GITHUB_ENV"
          else
            csv=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}" | grep -E '^campaigns/inputs/[^/]+\.csv$' | head -n1)
            if [ -z "$csv" ]; then
              echo "::error::No DealMachine CSV found in commit."
              exit 1
            fi
            echo "CSV_PATH=$csv" >> "$GITHUB_ENV"
            echo "DRY_RUN=true" >> "$GITHUB_ENV"
          fi

      - name: Execute pipeline
        env:
          CSV_PATH: ${{ env.CSV_PATH }}
          DRY_RUN: ${{ env.DRY_RUN }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DB_LEADS: ${{ secrets.NOTION_DB_LEADS }}
          NOTION_DB_BATCHES: ${{ secrets.NOTION_DB_BATCHES }}
          EZTEXTING_USER: ${{ secrets.EZTEXTING_USER }}
          EZTEXTING_PASSWORD: ${{ secrets.EZTEXTING_PASSWORD }}
          GOOGLE_SA_JSON: ${{ secrets.GOOGLE_SA_JSON }}
          GSHEETS_PARENT_FOLDER_ID: ${{ secrets.GSHEETS_PARENT_FOLDER_ID }}
          MESSAGE_TEMPLATE: ${{ secrets.MESSAGE_TEMPLATE }}
          QUIET_HOURS: "20-08"
          BATCH_SIZE: "150"
        run: node ops/pipeline.js --csv "$CSV_PATH" --dry-run "$DRY_RUN"
